#if !SYSCALL
#define SYSCALL

enum {
    SYS_EXIT,
    SYS_GETPID,
    SYS_SPAWN,
    SYS_WAITPID,
    SYS_COUNT,
};

extern fn syscall0(number: u32) u32;
extern fn syscall1(number: u32, arg1: u32) u32;
extern fn syscall2(number: u32, arg1: u32, arg2: u32) u32;

fn exit(status: i32) void {
    syscall1(SYS_EXIT, status);
}

fn getpid() i32 {
    return syscall0(SYS_GETPID);
}

fn spawn(entry: fn(args: *void) u32, args: *void) i32 {
    return syscall2(SYS_SPAWN, as(u32, entry), as(u32, args));
}

fn waitpid(pid: i32, status: *u32) i32 {
    return syscall2(SYS_WAITPID, pid, as(u32, status));
}

#endif
